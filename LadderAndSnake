
/**
 * -----------------------------------------------------
 * Assignment 1
 * Question: Part 1
 * Written by: Fadoua Doghmane ID#ID#40198495 and Tanya So Tin Yan ID#40208954
 * -----------------------------------------------------
 * @author Fadoua Doghmane ID#40198495 and Tanya So Tin Yan ID#40208954
 * COMP249
 * Assignment    #1
 * Due Date      Monday, February 7, 2022
 * 
 * General explanation of what the program does: 
 * */


import java.util.Scanner;
import java.util.Random;

public class LadderAndSnake {
	
	private int NBofPlayers;
	String temp = "~~";
	String names;
	Scanner key = new Scanner(System.in);
	
	
	
	private board[][] board_map = new board [10][10];
	private players[] playerArray = new players[5];
	
	
	public void setPlayerArray()
	{
		for(int b=0; b<NBofPlayers ; b++)
			playerArray[b] = new players (playerArray[b].getNames(), playerArray[b].getNameOfPlayer(), 0, 0, false, false);
		
		//this player is not used in the game but only for the method "play_order"
		playerArray[4] = new players (null,"CHECK ORDER", 0, 0, false, false);
	}
	
	public LadderAndSnake (int NBofPlayers)
	{
		this.NBofPlayers = NBofPlayers;
		System.out.println("\n ~~> This game is played by " + NBofPlayers + " players.\n");
		
		
		for (int b = 0; b < NBofPlayers; b++) {
		
			
			if(b == 0)
			{
				System.out.print(" ~ Please enter Player #" + (b+1) +"'s name: ");
	            
	            
	            names = key.next();
	            
	            playerArray [0] = new players(names, "\uD83D\uDE00", b, b, false, false);
	            
	            playerArray[0].setNames(names);
	            playerArray[0].setNameOfPlayer("\uD83D\uDE00");
	            System.out.print('\t' + playerArray[b].getNames() + " will be assigned to: " + "\uD83D\uDE00");
	            
			}
			
			if(b == 1)
			{
				System.out.print(" ~ Please enter Player #" + (b+1) +"'s name: ");
	            
	            
	            names = key.next();
	            
	            playerArray [1] = new players(names, "\uD83D\uDE08", b, b, false, false);
	            playerArray[1].setNames(names);
	            playerArray[1].setNameOfPlayer("\uD83D\uDE08");
	            System.out.print('\t' + playerArray[b].getNames() + " will be assigned to: " + "\uD83D\uDE08" );
	            
			}
			
			if(b == 2)
			{
				System.out.print(" ~ Please enter Player #" + (b+1) +"'s name: ");
	            
	            
	            names = key.next();
	            
	            playerArray [2] = new players(names, "\uD83D\uDC79", b, b, false, false);
	            playerArray[2].setNames(names);
	            playerArray[2].setNameOfPlayer("\uD83D\uDC79");
	            System.out.print('\t' + playerArray[b].getNames() + " will be assigned to: " + "\uD83D\uDC79" );
	            
			}
			
			if(b == 3)
			{
				System.out.print(" ~ Please enter Player #" + (b+1) +"'s name: ");
	            
	            
	            names = key.next();
	            
	            playerArray [3] = new players(names, "\uD83E\uDD20", b, b, false, false);
	            playerArray[3].setNames(names);
	            playerArray[3].setNameOfPlayer("\uD83E\uDD20");
	            System.out.print('\t' + playerArray[b].getNames() + " will be assigned to: " + "\uD83E\uDD20" );
	            
			}
	            System.out.println("\n");
		 } 

	}

	private static int rollDice() {
        int dice_nb;
        
        Scanner key = new Scanner(System.in);
        String rolling = key.nextLine();
        Random rand_num = new Random();
        
        dice_nb = rand_num.nextInt(6) + 1;
        return dice_nb;
    }
	
	public void decidOrder(int numberOfPlayers) {
		
		setPlayerArray();
		
		System.out.println(" ~ Each player must throw the dice to obtain the largest possible number" + "\n" + "\t to determine the order in which the players will play!");
		
		for (int i = 1; i < numberOfPlayers + 1; i++) {

			System.out.println("\n ~ It is " + playerArray[i-1].getNames() + "'s turn");

			System.out.print("  -> Please roll the dice (Press 'Enter')");
			
			int randomNum = rollDice();
			
			System.out.print("\t ~~> " + playerArray[i-1].getNames() + " rolled the dice and got " + randomNum + "\n");

			//Random rand = new Random();

			//int randomNum = rollDice();
					//rand.nextInt(6) + 1;
			//System.out.println("*" + randomNum + "*\n");

			if (i == 1) {
				playerArray[0].setNumOnDice(randomNum);
			} else if (i == 2) {
				playerArray[1].setNumOnDice(randomNum);
			} else if (i == 3) {
				playerArray[2].setNumOnDice(randomNum);
			} else if (i == 4) {
				playerArray[3].setNumOnDice(randomNum);
			}
			
		}
		

	}
	
	public void tie_true() {
		for (int i = 0; i < NBofPlayers; i++) {
			if (playerArray[i].isNumDiceRepeat()) {
				System.out.print("\n -> It is " + playerArray[i].getNames() + "'s turn." + "\n" + "  -> Please roll the dice (Press 'Enter')");
				
				//String enter = key.nextLine();
				playerArray[i].setNumOnDice(rollDice());
				
				System.out.println("\t ~~> " + playerArray[i].getNames() + " rolled the dice and got " + playerArray[i].getNumOnDice() + "");
			}
		}
		for (int i = 0; i < NBofPlayers; i++) {
			for (int j = i + 1; j < NBofPlayers; j++) {
				if (playerArray[i].isNumDiceRepeat() && playerArray[j].isNumDiceRepeat()) {
					if (playerArray[i].getNumOnDice() < playerArray[j].getNumOnDice()) {
						playerArray[4] = playerArray[i];
						playerArray[i] = playerArray[j];
						playerArray[j] = playerArray[4];
					} else if (playerArray[i].getNumOnDice() == playerArray[j].getNumOnDice()) {
						System.out.println("There is a tie again between " + playerArray[i].getNames() + " and " + playerArray[j].getNames());
						tie_true();
					}

				}
			}
		}
	}

	public void checkOrder() {

		int sameDice = 0;
		//boolean tie = false;
		for (int i = 0; i < NBofPlayers; i++) {
			for (int j = i + 1; j < NBofPlayers; j++) {
				if (playerArray[i].getNumOnDice() < playerArray[j].getNumOnDice()) {
					playerArray[4] = playerArray[i];
					playerArray[i] = playerArray[j];
					playerArray[j] = playerArray[4];
				}
			}

		}
		for (int i = 0; i < NBofPlayers; i++) {
			for (int j = i + 1; j < NBofPlayers; j++) {
				if (playerArray[i].getNumOnDice() == playerArray[j].getNumOnDice()) {
					sameDice++;
					
					System.out.println("\n ~~~ There is a tie between " + playerArray[j].getNames() + " and " + playerArray[i].getNames() + " ~~~");
					playerArray[i].setNumDiceRepeat(true);
					playerArray[j].setNumDiceRepeat(true);
					//tie = true;
				}
			}
		}
		if (sameDice >= 2) {
			System.out.println("More than 2 players got the same number. Thus, we must restart from the beginning.\n");
			
			decidOrder(NBofPlayers);
			checkOrder();
		} else if (sameDice == 1) {

			tie_true();
		}

		
	}
	
	public void printOrder() {
		System.out.println("\n ~ The order is: ");
		for (int i = 0; i < NBofPlayers; i++) {

			System.out.println("\t - " + playerArray[i].getNames() + " ");
		}
	}
	
	public void playing_Snk()
	{
		printOrder();
		for (int i =0; i<NBofPlayers; i++)
		while (!playerArray[0].isChampion() || !playerArray[1].isChampion() || !playerArray[2].isChampion() || !playerArray[3].isChampion() )
		{
			for(int b=0; b<NBofPlayers && !playerArray[b].isChampion() ; b++)
			{
				System.out.print("\n~~ It is " + playerArray[b].getNames() + "'s turn. (" + playerArray[b].getNameOfPlayer() + ")");
				System.out.println(" Please roll the dice! (Click on any button)");
				
				int c =0;
				c = rollDice();
				
				playerArray[b].PlayerMovement(c);
		
			//Player face a ladder or the head of a snake
				playerArray[b].setPlayLoc(Ladders_and_Snakes(playerArray[b].getPlayLoc()));
				Map_Print(playerArray[b].getNameOfPlayer(), playerArray[b].getPlayLoc());
				
				if(playerArray[b].getPlayLoc() == 100)
				{
					playerArray[b].setChampion(true);
					playerArray[i].setChampion(true);
					
					
					
					System.out.println();
					System.out.println("\t+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
					System.out.println("\t++++                                                                         ++++");
					System.out.println("\t++                            THANK YOU FOR PLAYING                            ++");
					System.out.println("\t++++                                                                         ++++");
					System.out.println("\t+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
					
					System.out.println("\t  ___     ___     ___     ___     ___     ___     ___     ___     ___     ___    ");
					System.out.println("\t // \\\\   // \\\\   // \\\\   // \\\\   // \\\\    // \\\\   // \\\\   // \\\\   // \\\\   // \\");
					System.out.println("\t//   \\\\_//   \\\\_//   \\\\_//   \\\\_//   \\\\__//   \\\\_//   \\\\_//   \\\\_//   \\\\_//   \\@~~");
					
					
				}
								
				if(playerArray[i].isChampion())
					break;	
			}
			

			
			
			
		}
		
		key.close();
			
	}
	
	public void board_map()
	{
		int a=1;
		
		for(int b=0;b<10;b++)
		{
			for(int c=0;c<10;c++,a++)
				board_map[b][c] = new board("~~", a);
		}
	}

	

	public void Map_Print(String name_player, int position)
	{
		System.out.println("_______________________________________________________________________________________________________________");
		System.out.println();
		for(int b=0; b<10; b++)
		{
			for(int c=0; c<10; c++)
			{
				if(board_map[b][c].getPlayer_Name().equals(name_player))
				{
					board_map[b][c].setPlayer_Name("~~");
				}
			}
		}
		
		
		
		for(int b=0; b<1; b++)
		{
			for(int c=0; c<10; c++)
			{
				if(board_map[b][c].getPlayLoc() == position)
				{
					board_map[b][c].setPlayer_Name(name_player);
				}
			}
		}
		
		
		for(int b=0; b<1; b++)
		{
			for(int c=0; c<10; c++)
			{
			
				
				//Player's name assigned to its position
				if(board_map[b][c].getPlayLoc() == position)
				{
						System.out.print("|____" + board_map[b][c].getPlayer_Name() + "____");
						
					
					//System.out.println(                                 "Player 4 ");
				}
				
				
				else if(board_map[b][c].getPlayer_Name().equals("~~"))
				{
					if(board_map[b][c].getPlayLoc() == 100) {
						System.out.println("_____@" + board_map[b][c].getPlayLoc() + "_____#");}
					
					
					if(board_map[b][c].getPlayLoc() < 100) {
					System.out.print("|_____" + board_map[b][c].getPlayLoc() + "____");}
				}
				
				
				else if(!board_map[b][c].getPlayer_Name().equals("~~"))
				{
					System.out.print("|____" + board_map[b][c].getPlayer_Name() + "____");
				}
			}
			System.out.println();
			System.out.println();
		}
		
	
	//Set the player to it's new position
		for(int b=1; b<10; b++)
		{
			for(int c=0; c<10; c++)
			{
				if(board_map[b][c].getPlayLoc() == position)
				{
					board_map[b][c].setPlayer_Name(name_player);
				}
			}
		}
		
		
		for(int b=1; b<10; b++)
		{
			for(int c=0; c<10; c++)
			{
			
				
				
				if(board_map[b][c].getPlayLoc() == position)
				{
						System.out.print("|____" + board_map[b][c].getPlayer_Name() + "____");
						
					
					//System.out.println(                                 "Player 4 ");
				}
				
				else if(board_map[b][c].getPlayer_Name().equals("~~"))
				{
					if(board_map[b][c].getPlayLoc() == 100) {
						System.out.println("|___" + board_map[b][c].getPlayLoc()+"____" );}
					
					if(board_map[b][c].getPlayLoc() < 100) {
					System.out.print("|____" +board_map[b][c].getPlayLoc() + "____");}
				}
				
				
				else if(!board_map[b][c].getPlayer_Name().equals("~~"))
				{
					System.out.print("|____" + board_map[b][c].getPlayer_Name() + "____");
				}
			}
			System.out.println();
			System.out.println();
		}
		
		
	}
	
public int Ladders_and_Snakes (int new_position)
	
	{
		System.out.print('\t');
		{
		if(new_position == 1)
		{
			System.out.println( "You have landed at the bottom of a ladder. You are going up to 38.");
			new_position = 38;
		}
		
		if(new_position == 4)
		{
			System.out.println( "You have  landed at the bottom of a ladder. You are going up to 14.");
			new_position = 14;
		}
		
		if(new_position == 9)
		{
			System.out.println( "You have landed at the bottom of a ladder. You are going up to 31.");
			new_position = 31;
		}
		
		if(new_position == 16)
		{
			System.out.println( "You have landed on the snake's head and got bit! You must go down to 6.");
			new_position = 6;
		}
		
		if(new_position == 28)
		{
			System.out.println( "You have landed at the bottom of a ladder. You are going up to 84.");
			new_position = 84;
		}
		
		if(new_position == 21)
		{
			System.out.println( "You have landed at the bottom of a ladder. You are going up to 42.");
			new_position = 42;
		}
		
		if(new_position == 36)
		{
			System.out.println( "You have landed at the bottom of a ladder. You are going up to 44.");
			new_position = 44;
		}
		
		if(new_position == 48)
		{
			System.out.println( "You have landed on the snake's head and got bit! You must go down to 30.");
			new_position = 30;
		}
		
		if(new_position == 51)
		{
			System.out.println( "You have landed at the bottom of a ladder. You are going up to 67.");
			new_position = 67;
		}
		
		if(new_position == 64)
		{
			System.out.println( "You have landed on the snake's head and got bit! You must go down to 60.");
			new_position = 60;
		}
		
		if(new_position == 71)
		{
			System.out.println( "You have landed at the bottom of a ladder. You are going up to 91.");
			new_position = 91;
		}
		
		if(new_position == 79)
		{
			System.out.println( "You have landed on the snake's head and got bit! You must go down to 19.");
			new_position = 19;
		}
		
		if(new_position == 80)
		{
			
			System.out.println( "You have landed at the bottom of a ladder. You are going up to 100.");
			
			System.out.println("\t***********************************");
			System.out.println("\t       You are the WINNER!         ");
			System.out.println("\t***********************************");
			
			new_position = 100;
		}
		
		if(new_position == 93)
		{
			System.out.println( "You have landed on the snake's head and got bit! You must go down to 68.");
			new_position = 68;
		}
		
		if(new_position == 95)
		{
			System.out.println( "You have landed on the snake's head and got bit! You must go down to 24.");
			new_position = 24;
		}
		
		if(new_position == 97)
		{
			System.out.println( "You have landed on the snake's head and got bit! You must go down to 76.");
			new_position = 76;
		}
		
		if(new_position == 98)
		{
			System.out.println( "You have landed on the snake's head and got bit! You must go down to 78.");
			new_position = 78;
		}
		
		System.out.println();
		return new_position;
		
		}
	}
	
}
